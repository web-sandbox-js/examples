const map=new WeakMap,widgets=new Set;function get(a){return map.get(a)}function register(a,b){widgets.add(a),map.set(a,b),reroute()}function unregister(a){widgets.delete(a),map.delete(a)}function shouldBeActive(a){const b=get(a);try{return b(location)}catch(a){return console.error(a),!1}}function reroute(){const a=[],b=[];widgets.forEach((c,d)=>{shouldBeActive(d)?a.push(d):b.push(d)}),Promise.all(a.map(a=>a.bootstrap())).then(()=>Promise.all(b.map(a=>a.unmount())).then(()=>{a.filter(a=>shouldBeActive(a)).forEach(a=>a.mount())}))}const isInBrowser="undefined"!=typeof window,capturedEventListeners={hashchange:[],popstate:[]},routingEventsListeningTo=["hashchange","popstate"];let urlRerouteOnly;function setUrlRerouteOnly(a){urlRerouteOnly=a}function urlReroute(){reroute()}function createPopStateEvent(a,b){let c;try{c=new PopStateEvent("popstate",{state:a})}catch(b){c=document.createEvent("PopStateEvent"),c.initPopStateEvent("popstate",!1,!1,a)}return c.singleSpa=!0,c.singleSpaTrigger=b,c}function patchedUpdateState(a,b){return function(){const c=window.location.href,d=a.apply(this,arguments),e=window.location.href;return urlRerouteOnly&&c===e||(isStarted()?window.dispatchEvent(createPopStateEvent(window.history.state,b)):reroute()),d}}if(isInBrowser){window.addEventListener("hashchange",urlReroute),window.addEventListener("popstate",urlReroute);const a=window.addEventListener,b=window.removeEventListener;window.addEventListener=function(b,c){return"function"==typeof c&&0<=routingEventsListeningTo.indexOf(b)&&!capturedEventListeners[b].find(a=>a===c)?void capturedEventListeners[b].push(c):a.apply(this,arguments)},window.removeEventListener=function(a,c){return"function"==typeof c&&0<=routingEventsListeningTo.indexOf(a)?void(capturedEventListeners[a]=capturedEventListeners[a].filter(a=>a!==c)):b.apply(this,arguments)},window.history.pushState=patchedUpdateState(window.history.pushState,"pushState"),window.history.replaceState=patchedUpdateState(window.history.replaceState,"replaceState")}let started=!1;function start(a={}){started=!0,a.urlRerouteOnly&&setUrlRerouteOnly(a.urlRerouteOnly),isInBrowser&&reroute()}function isStarted(){return started}export{register,start,unregister};
//# sourceMappingURL=web-widget-router.esm.js.map
